version: '3.4'

x-logging: &logging
  driver: local
  options:
    max-file: 10

# This Compose file is expected to be used with the devnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l2_data:
  op_log:

services:
  op_stack_go_builder: # Not an actual service, but builds the prerequisite go images
    build:
      context: ../
      dockerfile: ops/docker/op-stack-go/Dockerfile
      args:
        GIT_COMMIT: 'dev'
        GIT_DATE: '0'
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    entrypoint: ['echo', 'build complete']

  # TODO: can we make this conditional on a shutter enabled flag?
  op-geth-builder: # Not an actual service, but builds the prerequisite docker image
    build:
      context: ../packages/op-geth/
      dockerfile: Dockerfile
    # replace the upstream image with the local shutter op-geth
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth:optimism
    entrypoint: ['echo', 'build complete']
  rs-build:
    build:
      context: ../packages/rolling-shutter
      dockerfile: docker/build-src/optimism/Dockerfile
    profiles:
      - shutter
    image: shutter
    command: '-v'

  l1:
    build:
      context: .
      dockerfile: Dockerfile.l1
    ports:
      - '8545:8545'
      - '8546:8546'
      - '7060:6060'
    volumes:
      - 'l1_data:/db'
      - '${PWD}/../.devnet/genesis-l1.json:/genesis.json'
      - '${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt'
    environment:
      GETH_MINER_RECOMMIT: 100ms

  l2:
    build:
      context: ..
      dockerfile: ops-bedrock/Dockerfile.l2
    ports:
      - '9545:8545'
      - '8060:6060'
    volumes:
      - 'l2_data:/db'
      - '${PWD}/../.devnet/genesis-l2.json:/genesis.json'
      - '${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt'
    entrypoint: # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - '/bin/sh'
      - '/entrypoint.sh'
      - '--authrpc.jwtsecret=/config/test-jwt-secret.txt'
    environment:
      GETH_MINER_RECOMMIT: 100ms
    #TODO: only when shutter enabled
    depends_on:
      - op-geth-builder
    healthcheck:
      test: >
        curl -sSf -X POST http://127.0.0.1:8545 -H "Content-Type: application/json" --data-raw '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[], "id": 1}'
      start_period: '30s'
      start_interval: '2s'

  op-node:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:devnet
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://l2:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --shutter.grpc-address=shutter-node:8282
    ports:
      - '7545:8545'
      - '9003:9003'
      - '7300:7300'
      - '6060:6060'
    volumes:
      - '${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt'
      - '${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt'
      - '${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt'
      - '${PWD}/../.devnet/rollup.json:/rollup.json'
      - op_log:/op_log

  op-proposer:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-proposer/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer:devnet
    ports:
      - '6062:6060'
      - '7302:7300'
      - '6546:8545'
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: '${L2OO_ADDRESS}'
      OP_PROPOSER_PPROF_ENABLED: 'true'
      OP_PROPOSER_METRICS_ENABLED: 'true'
      OP_PROPOSER_ALLOW_NON_FINALIZED: 'true'
      OP_PROPOSER_RPC_ENABLE_ADMIN: 'true'

  op-batcher:
    depends_on:
      - op_stack_go_builder
      - l1
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-batcher/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher:devnet
    ports:
      - '6061:6060'
      - '7301:7300'
      - '6545:8545'
    environment:
      OP_BATCHER_L1_ETH_RPC: http://l1:8545
      OP_BATCHER_L2_ETH_RPC: http://l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op-node:8545
      OP_BATCHER_MAX_CHANNEL_DURATION: 1
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_MNEMONIC: test test test test test test test test test test test junk
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_PPROF_ENABLED: 'true'
      OP_BATCHER_METRICS_ENABLED: 'true'
      OP_BATCHER_RPC_ENABLE_ADMIN: 'true'
      OP_BATCHER_BATCH_TYPE: 0

  artifact-server:
    depends_on:
      - l1
    image: nginx:1.25-alpine
    ports:
      - '8080:80'
    volumes:
      - '${PWD}/../.devnet/:/usr/share/nginx/html/:ro'
    security_opt:
      - 'no-new-privileges:true'
  #  stateviz:
  #    build:
  #      context: ../
  #      dockerfile: ./ops-bedrock/Dockerfile.stateviz
  #    command:
  #      - stateviz
  #      - -addr=0.0.0.0:8080
  #      - -snapshot=/op_log/snapshot.log
  #      - -refresh=10s
  #    ports:
  #      - "9090:8080"
  #    volumes:
  #      - op_log:/op_log:ro
  #
  #

  chain-seed:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - chain
    volumes:
      - ./data/chain-seed:/chain
    command: '--config /chain/config/config.toml'
    depends_on:
      rs-build:
        condition: service_completed_successfully
    logging: *logging

  shutter-node:
    build:
      context: ../
      dockerfile: shutter-node/Dockerfile
      args:
        OP_STACK_GO_BUILDER: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-stack-go:devnet
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/shutter-node:devnet
    profiles:
      - shutter
    ports:
      - '9555:8545'
      - '7304:7300'
      - '8061:6060'
    entrypoint: # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - 'shutter-node'
    command: >
      --log.level=debug
      --l2.unsafe-sync-rpc=ws://l2:8546
      --rollup.config=/rollup.json
      --instance-id=442
      --database.path=shutter.sqlite
      --grpc.listen-network=tcp
      --grpc.listen-address=:8282
      --p2p.listen-addresses=/ip4/0.0.0.0/tcp/23000,/ip6/::/tcp/23000
      --p2p.private-key=CAESQOWuKv6bLyasxtAo0JYVjfvz+XEiWZj2JUpu8E0vMdPbavyOS/iXd3ZGRBcb9KeAfdROj0ZbQCP0RhycZ2P7Y70=
      --p2p.bootnodes=/dns4/bootnode-0/tcp/23000/p2p/12D3KooWJN7262vmnEQHkYG7VrZDwz9fMyJtHyvGp4XSenuUYfeJ,/dns4/bootnode-1/tcp/23000/p2p/12D3KooWSayB2PEYpXtdk2dEqFaagoy8kDzmWpoD9DieuuzYdcBo
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
    depends_on:
      op_stack_go_builder:
        condition: service_completed_successfully
      keyper-0:
        condition: service_started
      keyper-1:
        condition: service_started
      keyper-2:
        condition: service_started
      keyper-3:
        condition: service_started
      bootnode-0:
        condition: service_started
      bootnode-1:
        condition: service_started
      db:
        condition: service_started
    volumes:
      - '${PWD}/../.devnet/rollup.json:/rollup.json'

  db:
    image: postgres
    restart: always
    profiles:
      - shutter
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      start_period: '30s'
      start_interval: '2s'
    logging: *logging

  bootnode-0:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - '--loglevel=:debug,basichost:info,swarm:info,swarm2:info,net/identify:debug,pubsub:info,p2p-config:info,upgrader:info'
      - p2pnode
    command: '--config /config/bootnode-0.toml'
    volumes:
      - ./config:/config
    depends_on:
      - rs-build
      - db
    logging: *logging

  bootnode-1:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - p2pnode
    command: '--config /config/bootnode-1.toml'
    volumes:
      - ./config:/config
    depends_on:
      rs-build:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    logging: *logging

  chain-0-validator:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - chain
    volumes:
      - ./config:/config
      - ./data/chain-0-validator:/chain
    command: '--config /chain/config/config.toml'
    depends_on:
      rs-build:
        condition: service_completed_successfully
    logging: *logging

  chain-1-validator:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - chain
    volumes:
      - ./data/chain-1-validator:/chain
    command: '--config /chain/config/config.toml'
    depends_on:
      rs-build:
        condition: service_completed_successfully
    logging: *logging

  chain-2-validator:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - chain
    volumes:
      - ./data/chain-2-validator:/chain
    command: '--config /chain/config/config.toml'
    depends_on:
      rs-build:
        condition: service_completed_successfully
    logging: *logging

  chain-3-validator:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - chain
    volumes:
      - ./data/chain-3-validator:/chain
    command: '--config /chain/config/config.toml'
    depends_on:
      rs-build:
        condition: service_completed_successfully
    logging: *logging

  keyper-0:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - '--loglevel=:debug,basichost:info,swarm:info,swarm2:info,net/identify:info,pubsub:info,p2p-config:info,upgrader:info'
      - op-keyper
    command: '--config /config/keyper-0.toml'
    volumes:
      - ./config:/config
    ports:
      - '9200:9100'
    depends_on:
      rs-build:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      bootnode-0:
        condition: service_started
      bootnode-1:
        condition: service_started
      chain-0-validator:
        condition: service_started
    logging: *logging

  keyper-1:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - '--loglevel=:debug,basichost:info,swarm:info,swarm2:info,net/identify:info,pubsub:info,p2p-config:info,upgrader:info'
      - op-keyper
    command: '--config /config/keyper-1.toml'
    volumes:
      - ./config:/config
    ports:
      - '9201:9100'
    depends_on:
      rs-build:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      bootnode-0:
        condition: service_started
      bootnode-1:
        condition: service_started
      chain-1-validator:
        condition: service_started
    logging: *logging

  keyper-2:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - '--loglevel=:debug,basichost:info,swarm:info,swarm2:info,net/identify:info,pubsub:info,p2p-config:info,upgrader:info'
      - op-keyper
    command: '--config /config/keyper-2.toml'
    volumes:
      - ./config:/config
    ports:
      - '9202:9100'
    depends_on:
      rs-build:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      bootnode-0:
        condition: service_started
      bootnode-1:
        condition: service_started
      chain-2-validator:
        condition: service_started
    logging: *logging

  keyper-3:
    image: shutter
    restart: always
    profiles:
      - shutter
    entrypoint:
      - /rolling-shutter
      - '--loglevel=:debug,basichost:info,swarm:info,swarm2:info,net/identify:info,pubsub:info,p2p-config:info,upgrader:info'
      - op-keyper
    command: '--config /config/keyper-3.toml'
    volumes:
      - ./config:/config
    ports:
      - '9203:9100'
    depends_on:
      rs-build:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      bootnode-0:
        condition: service_started
      bootnode-1:
        condition: service_started
      chain-3-validator:
        condition: service_started
    logging: *logging

  dummyserver:
    build:
      dockerfile: docker/build-src/dummyserver/Dockerfile
      context: ..
    restart: always
    profiles:
      - dev
    logging: *logging

  metrics:
    build:
      context: build-src/metrics
    restart: always
    ports:
      - '8428:8428'
    volumes:
      - ./data/metrics:/victoria-metrics-data
    profiles:
      - dev
    logging: *logging

  dockerize:
    image: jwilder/dockerize
    profiles:
      - script
    logging: *logging
